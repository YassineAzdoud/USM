{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youcode\\\\Desktop\\\\v\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Preview from './components/Preview/index';\nimport Message from './components/Message';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [userName, setuserName] = useState('');\n  const [firstName, setfirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [createdDate, setcreatedDate] = useState('');\n  const [status, setstatus] = useState('');\n  const [registrationNumber, setregistrationNumber] = useState('');\n  const [creating, setCreating] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')));\n    } else {\n      localStorage.setItem('notes', JSON.stringify([]));\n    }\n  }, []);\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000);\n    }\n  }, [validationErrors]);\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n\n    if (!userName) {\n      validationErrors.push('please enter title of notes');\n      passed = false;\n    }\n\n    if (!firstName) {\n      validationErrors.push('please enter content of notes');\n      passed = false;\n    }\n\n    setValidationErrors(validationErrors);\n    return passed;\n  };\n\n  const changeuserHandler = event => {\n    setuserName(event.target.value);\n  };\n\n  const changefirstNameHandler = event => {\n    setfirstName(event.target.value);\n  };\n\n  const changelastNameHandler = event => {\n    setlastName(event.target.value);\n  };\n\n  const changecreatedDateHandler = event => {\n    setcreatedDate(event.target.value);\n  };\n\n  const changestatusHandler = event => {\n    setstatus(event.target.value);\n  };\n\n  const changeregistrationNumberHandler = event => {\n    setregistrationNumber(event.target.value);\n  };\n\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n    const note = {\n      id: Math.floor(Math.random() * 1000000000),\n      userName: userName,\n      firstName: firstName\n    };\n    const createdNotes = [...notes, note];\n    saveToLocalStorage('notes', createdNotes);\n    setNotes(createdNotes);\n    setCreating(false);\n    setSelectedNote(note.id);\n    setuserName('');\n    setfirstName('');\n  };\n\n  const deleteNoteHandler = () => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(note => note.id === selectedNote);\n    notes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', notes);\n    setNotes(notes);\n    setSelectedNote(null);\n  };\n\n  const getAddNote = () => {\n    if (isOpen) {\n      return /*#__PURE__*/_jsxDEV(NoteForm, {\n        togglePopup: togglePopup,\n        formTitle: \"New Note\",\n        userName: userName,\n        firstName: firstName,\n        userChanged: changeuserHandler,\n        submitText: \"save\",\n        submitClicked: saveNoteHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this);\n    }\n\n    ;\n  };\n\n  const addNoteHandler = () => {\n    setCreating(true);\n    setIsOpen(!isOpen);\n    setuserName('');\n    setfirstName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NotesContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Note, {\n        users: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: addNoteHandler,\n          children: \"Ajouter utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      children: creating && getAddNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), validationErrors.length !== 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      validationMessages: validationErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yjjfbufpiwV263MyoBMRPfiishw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Youcode/Desktop/v/src/App.js"],"names":["React","useEffect","useState","Preview","Message","NotesContainer","Note","NoteForm","Alert","App","notes","setNotes","userName","setuserName","firstName","setfirstName","lastName","setlastName","createdDate","setcreatedDate","status","setstatus","registrationNumber","setregistrationNumber","creating","setCreating","isOpen","setIsOpen","validationErrors","setValidationErrors","togglePopup","localStorage","getItem","JSON","parse","setItem","stringify","length","setTimeout","saveToLocalStorage","key","value","validate","passed","push","changeuserHandler","event","target","changefirstNameHandler","changelastNameHandler","changecreatedDateHandler","changestatusHandler","changeregistrationNumberHandler","saveNoteHandler","note","id","Math","floor","random","createdNotes","setSelectedNote","deleteNoteHandler","updatedNotes","noteIndex","findIndex","selectedNote","splice","getAddNote","addNoteHandler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Preview from './components/Preview/index';\nimport Message from './components/Message';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n  const [userName, setuserName] = useState('');\n  const [firstName, setfirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [createdDate, setcreatedDate] = useState('');\n  const [status, setstatus] = useState('');\n  const [registrationNumber, setregistrationNumber] = useState('');\n  \n  const [creating, setCreating] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([])\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')))\n    }else {\n      localStorage.setItem('notes', JSON.stringify([]))\n    }\n  }, []);\n\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000)\n    }\n  }, [validationErrors])\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n    if (!userName) {\n      validationErrors.push('please enter title of notes');\n      passed = false\n    }\n    if (!firstName) {\n      validationErrors.push('please enter content of notes');\n      passed = false\n    }\n    setValidationErrors(validationErrors);\n    return passed\n  }\n\n  const changeuserHandler = (event) => {\n    setuserName(event.target.value)\n  }\n\n  const changefirstNameHandler = (event) => {\n    setfirstName(event.target.value)\n  }\n\n  const changelastNameHandler = (event) => {\n    setlastName(event.target.value)\n  }\n\n  const changecreatedDateHandler = (event) => {\n    setcreatedDate(event.target.value)\n  }\n\n  const changestatusHandler = (event) => {\n    setstatus(event.target.value)\n  }\n\n  const changeregistrationNumberHandler = (event) => {\n    setregistrationNumber(event.target.value)\n  }\n\n  const saveNoteHandler = () => {\n\n    if (!validate()) return;\n\n    const note = {\n      id: Math.floor(Math.random() * 1000000000),\n      userName: userName,\n      firstName: firstName,\n      \n    }\n\n    const createdNotes = [...notes, note];\n    \n    saveToLocalStorage('notes', createdNotes)\n    setNotes(createdNotes);\n    setCreating(false);\n    setSelectedNote(note.id)\n    setuserName('');\n    setfirstName('');\n\n  }\n\n \n\n \n\n \n\n  const deleteNoteHandler = () => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(note => note.id === selectedNote);\n    notes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', notes)\n    setNotes(notes);\n    setSelectedNote(null)\n  }\n\n  const getAddNote = () => {\n \n\nif(isOpen){\n    return (\n      <NoteForm\n        togglePopup = {togglePopup}\n        formTitle= \"New Note\"\n        userName = {userName}\n        firstName = {firstName}\n        userChanged = {changeuserHandler}\n     \n        submitText=\"save\"\n        submitClicked={saveNoteHandler}\n      />\n    )};\n  };\n  const addNoteHandler = () => {\n    setCreating(true)\n    setIsOpen(!isOpen);\n    setuserName('')\n    setfirstName('')\n  }\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n      <Note users={notes} />\n         <div className=\"add\"><button className=\"add-button\" onClick={addNoteHandler}>Ajouter utilisateur</button></div>\n        \n        </NotesContainer>\n        <Preview>\n        {creating && getAddNote()}\n      </Preview>\n       {validationErrors.length !== 0 && <Alert validationMessages={validationErrors}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}