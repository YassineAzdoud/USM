{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youcode\\\\Desktop\\\\v\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Preview from './components/Preview/index';\nimport Message from './components/Message';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport NoteList from './components/Notes/NoteList';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [userName, setuserName] = useState('');\n  const [firstName, setfirstName] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')));\n    } else {\n      localStorage.setItem('notes', JSON.stringify([]));\n    }\n  }, []);\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000);\n    }\n  }, [validationErrors]);\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n\n    if (!userName) {\n      validationErrors.push('please enter title of notes');\n      passed = false;\n    }\n\n    if (!firstName) {\n      validationErrors.push('please enter content of notes');\n      passed = false;\n    }\n\n    setValidationErrors(validationErrors);\n    return passed;\n  };\n\n  const changeuserNameHandler = event => {\n    setuserName(event.target.value);\n  };\n\n  const changefirstNameHandler = event => {\n    setfirstName(event.target.value);\n  };\n\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n    const note = {\n      id: new Date(),\n      userName: userName,\n      firstName: firstName\n    };\n    const updatedNotes = [...notes, note];\n    saveToLocalStorage('notes', updatedNotes);\n    setNotes(updatedNotes);\n    setCreating(false);\n    setSelectedNote(note.id);\n    setuserName('');\n    setfirstName('');\n  };\n\n  const deleteNoteHandler = () => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(note => note.id === selectedNote);\n    notes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', notes);\n    setNotes(notes);\n    setSelectedNote(null);\n  };\n\n  const getAddNote = () => {\n    return /*#__PURE__*/_jsxDEV(NoteForm, {\n      formTitle: \"New Note\",\n      userName: userName,\n      firstName: firstName,\n      titleChanged: changeuserNameHandler,\n      contentChanged: changefirstNameHandler,\n      submitText: \"save\",\n      submitClicked: saveNoteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        title: \"Not Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (!selectedNote) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        title: \"Please Select Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const addNoteHandler = () => {\n    setCreating(true);\n    setuserName('');\n    setfirstName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NotesContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Note, {\n        users: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addNoteHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      children: creating ? getAddNote() : getPreview()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), validationErrors.length !== 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      validationMessages: validationErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DXuMfQ7US2nffRVRIbIyxdPHWJ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Youcode/Desktop/v/src/App.js"],"names":["React","useEffect","useState","Preview","Message","NotesContainer","NoteList","Note","NoteForm","Alert","App","notes","setNotes","userName","setuserName","firstName","setfirstName","selectedNote","setSelectedNote","creating","setCreating","isOpen","setIsOpen","validationErrors","setValidationErrors","localStorage","getItem","JSON","parse","setItem","stringify","length","setTimeout","saveToLocalStorage","key","value","validate","passed","push","changeuserNameHandler","event","target","changefirstNameHandler","saveNoteHandler","note","id","Date","updatedNotes","deleteNoteHandler","noteIndex","findIndex","splice","getAddNote","getPreview","addNoteHandler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Preview from './components/Preview/index';\nimport Message from './components/Message';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport NoteList from './components/Notes/NoteList';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n  const [userName, setuserName] = useState('');\n  const [firstName, setfirstName] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([])\n\n  \n\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')))\n    }else {\n      localStorage.setItem('notes', JSON.stringify([]))\n    }\n  }, []);\n\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000)\n    }\n  }, [validationErrors])\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n    if (!userName) {\n      validationErrors.push('please enter title of notes');\n      passed = false\n    }\n    if (!firstName) {\n      validationErrors.push('please enter content of notes');\n      passed = false\n    }\n    setValidationErrors(validationErrors);\n    return passed\n  }\n\n  const changeuserNameHandler = (event) => {\n    setuserName(event.target.value)\n  }\n\n  const changefirstNameHandler = (event) => {\n    setfirstName(event.target.value)\n  }\n\n  const saveNoteHandler = () => {\n\n    if (!validate()) return;\n\n    const note = {\n      id: new Date(),\n      userName: userName,\n      firstName: firstName\n    }\n\n    const updatedNotes = [...notes, note];\n    \n    saveToLocalStorage('notes', updatedNotes)\n    setNotes(updatedNotes);\n    setCreating(false);\n    setSelectedNote(note.id)\n    setuserName('');\n    setfirstName('');\n\n  }\n\n \n\n \n\n \n\n  const deleteNoteHandler = () => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(note => note.id === selectedNote);\n    notes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', notes)\n    setNotes(notes);\n    setSelectedNote(null)\n  }\n\n  const getAddNote = () => {\n \n\n\n    return (\n      <NoteForm\n        formTitle= \"New Note\"\n        userName = {userName}\n        firstName = {firstName}\n        titleChanged = {changeuserNameHandler}\n        contentChanged = {changefirstNameHandler}\n        submitText=\"save\"\n        submitClicked={saveNoteHandler}\n      />\n    );\n  };\n\n  const getPreview = () => {\n    if(notes.length === 0) {\n      return <Message title='Not Notes'/>\n    }\n    if(!selectedNote){\n      return <Message title='Please Select Notes'/>\n    }\n  }\n\n \n    \n \n\n \n\n  const addNoteHandler = () => {\n    setCreating(true)\n    setuserName('')\n    setfirstName('')\n  }\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n      <Note users={notes} />\n         {/* <NoteList>\n           {notes.map(note => <Note key={note.id} userName={note.userName} \n           noteClicked={() => selectedNoteHandler(note.id)}\n           active={selectedNote === note.id}/>)}\n          </NoteList> */}\n        <button className=\"add-btn\" onClick={addNoteHandler}>+</button>\n        </NotesContainer>\n      <Preview>\n        {creating ? getAddNote() : getPreview()}\n      </Preview>\n       {validationErrors.length !== 0 && <Alert validationMessages={validationErrors}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}